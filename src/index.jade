doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Meanwhile in the Controll-room

    link(rel='stylesheet', type='text/css', href='build/build.css')

  body

    article
      section
        h1 Meanwhile in the controller room
        p and a swish of views
        img(src="/images/logo.png", alt="" width="150")

      section
        h2.bullet In this third lesson
        ul
          li Repeat MVC's
          li The Controller
          li Routing from the outside in
          li Controller methods
          li Params (and session store)
          li before_actions and before filters
          li Protect from forgery and the application controller
          li Writing a resourceful route with some views

      section
        h2 Repeat MVC's
        p What does it do?
        img(src="/images/mvc.png", alt="" width="300")

      section
        h2 repeat MVC's
        h3 In Rails
        p Request = config/routes.rb
        p Controller = app/controllers
        p View = app/views
        p Model = app/models
        img(src="/images/mvc.png", alt="" width="150")

      section
        h2 The controller
        p
        img(src="/images/controller.png", alt="" width="150")

      section
        h2 The controller
        h3.bullet It:
        ul
          li Is the center of your application
          li Handles diffrent requests from your router
          li Gets variables from your model
          li Accesses information like session data and user provided parameters
          li Renders html views (and even emails)

      section
        h2 The controller
        h3 Let's create one.
        pre
          code.language-bash.
            rails g controller articles


      section
        h2 Routers
        p Routing from the outside in
        img(src="/images/router.png", alt="" width="150")

      section
        h2 Routers
        p Let's write some routers
        pre
          code.language-ruby.
            # config/routes.rb

            #convention routes
            root 'articles#index'

            #resourceful routes
            resources :articles

            # specified routes
            get '/contact', to: 'pages#contact', as: :some_contact

            get 'login', to: 'logins#create', as: :login_path
            post 'login', to: 'logins#create', as: :login_path

      section
        h2 Routers
        p now visit
        p localhost:3000/rails/info
        p or do 'bin/rake routes' in console

      section
        h2 Routers
        h3 more info: http://guides.rubyonrails.org/routing.html

      section
        h2 Controllers
        img(src="/images/controller.png", alt="" width="150")

      section
        h2 Controllers
        h3.bullet Controller methods:
        ul
          li Store a piece of behaviour for a page or action
          li store methods that never have more then 10 lines and a branch condition size of 15

      section
        h2 Controllers
        h3 Let's make an index
        pre
          code.language-ruby.
            # in app/controllers/articles_controller.rb

            def index
              @articles = Article.all
            end

      section
        h2 Controllers
        h3 Let's make an index
        pre
          code.language-ruby.
            # in app/views/controllers/index.html.erb
            &lt;% @articles.each do |article| %&gt;

              &lt;h1&gt;&lt;%= article.title %&gt;&lt;/h1&gt;

              &lt;p&gt;&lt;%= article.content.html_safe %&gt;&lt;/p&gt;

      section
        h2 Controllers
        h3 Let's make an index
        p visit localhost:3000/articles

      section
        h2 Controllers
        h3 Lets play with params
        pre
          code.language-ruby.
            # in app/controllers/articles_controller.rb
            def index
              @articles = Article.all

              if params[:my_text].present?
                @my_text = params[:my_text]
              else
                @my_text = 'nothing'
              end
            end

      section
        h2 Controllers
        h3 Lets play with params
        pre
          code.language-ruby.
            # in app/views/controllers/index.html.erb
            &lt;% @articles.each do |article| %&gt;

              &lt;h1&gt;&lt;%= article.title %&gt;&lt;/h1&gt;

              &lt;p&gt;&lt;%= article.content.html_safe %&gt;&lt;/p&gt;
            &lt;% end %&gt;

            &lt;hr&gt;
            &lt;%= @my_text %&gt;

      section
        h2 Controllers
        h3 Let's play with params
        p visit localhost:3000/articles again
        p now visit <br> localhost:3000/articles?my_text=SomeTextHere

      section
        h2 Controllers
        h3.bullet before_actions and before filters with private methods:
        ul
          li Allow repeated code to be written only once
          li Allow a bit more calculations in a controller.

      section
        h2 Controllers
        h3 before_actions and before filters with private methods
        p Example
        pre
          code.language-ruby.
            before_action :set_article, only: [:show, :edit, :update, :destroy]

            def your stuf here
            end

            private

            def set_article
              @article = Article.find(params[:id])
            end

      section
        h2 Controllers
        h3 Application Controller
        p check app/controllers/application_controller

      section
        h2 Controller
        h3 Let's build an articles controller now.

      section
        h2 Controller
        h3 bonus: responders

      section(style="background: url(/images/applause.gif) no-repeat; background-size: cover")

    script(src='build/build.js')
